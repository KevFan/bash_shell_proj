#!/bin/bash
#Kevin Fan (26/4/17)
#Description: This script searches and removes all of a customer's information
# from the Address Book based on a particular customers name or alias

#Clear the terminal
clear

function readInput 
{
	#Ask user for search name
	printf "\nPlease enter name or alias of customer you wish to remove:  "

	#Reads in search name as parameter
	read input
	lowerCaseInput=${input,,}
	checkInput
}


#This function checks the search input to see if its valid.
#If not then the revelent message is displayed.
#If search input in valid, options are displayed to user.
#If no matches are found, relevant message is displayed
function checkInput
{
	if [ -z $lowerCaseInput ]; then
		printf "\n\tNo entry detected. Please re-enter search term"
		readInput
	elif [[ $(awk -v search="$lowerCaseInput" '$2 ~ search || $3 ~ search' CustomerDetails | wc -l) -ne 0 ]]; then
		printf "\n$(awk -v search="$lowerCaseInput" '$2 ~ search || $3 ~ search' CustomerDetails | wc -l) match(s) were found:\n"
		awk -v search="$lowerCaseInput" '$2 ~ search || $3 ~ search' CustomerDetails
		# grep -i $input CustomerDetails 
		actionAfterSearch
	elif [[ $(awk -v search="$lowerCaseInput" '$2 ~ search || $3 ~ search' CustomerDetails | wc -l) -eq 0 ]]; then
		printf "\nNo matches were found\n"
		actionAfterSearch
	fi
}


# This function serves as a secondary menu that gives options to the user after the search
# Users can remove all the matching entries, perfom another seach or return to the main menu
function actionAfterSearch
{
	validChoice=false;
	while [[ $validChoice = false ]]; do
		printf "\n\t1) Remove all matching entries found\n"
		printf "\n\t2) Perform another search\n"
		printf "\n\t=========================================\n"
		printf "\n\t0) Return to Main Menu\n"
		printf "\nEnter choice: "
		read choice
		clear
			if ! [[ $choice =~ ^-?[0-9]+$ ]]; then
				printf "\nInvalid (String) entry, only integers shown are allowed. Please re-renter option\n"
			elif [ $choice -le -1 ] || [ $choice -ge 3 ]; then
				printf "\nInvalid number entered\n"
			elif [[ $choice -eq 1 ]]; then
				removeInput
			elif [[ $choice -eq 2 ]]; then
				readInput
			else
				validChoice=valid
			fi
	done
}

#This function removes the searched 
function removeInput
{
	# Inverted awk search - moves all names and alias that do not have the search term to another file
	awk -v search="$lowerCaseInput" '!($2 ~ search) && !($3 ~ search)' CustomerDetails > /tmp/CustomerDetails

	#Inverted search - All but the searched item is moved to an temp file
	# grep -v $a CustomerDetails > /tmp/CustomerDetails

	#Temp file is moved back to the same directory replacing the old file
	mv /tmp/CustomerDetails CustomerDetails
	printf "\nCustomer Details successfully removed\n"
	sleep 2
	clear
}

#Calls the readInput function that begins the script
readInput

