#!/bin/bash
#Kevin Fan (Date)
#Description: This script creates a local file named "CustomerDetails".
#Parameters are taken in from the user and stored/updates the CustomerDetails 
#file with customer details taken from the user

#Clears the screen content
clear

#This function asks user for customer email. The valid email function is called
#after to check is whether email is valid
function readEmail
{
	printf "\tPlease enter the customer email address: "
	read email
	validEmail
}

#This function validates whether email entered is valid or not.
#If email is not valid the readEmail function is called again to ask user to 
#re-enter email address
function validEmail
{
	validEmail=false
	while [[ $validEmail = false ]]; do
		if [[ $email != *@*.* ]]; then
			printf "\n\tNot a valid email. Must contain @ and a .\n"
			readEmail
		elif [[ $(grep -i $email ../CustomerDetails | wc -l) -ne 0 ]]; then
			printf "\n\tEmail already used\n"
			readEmail
		else
			validEmail=valid
		fi
	done
	# uniqueEmail
}

# function uniqueEmail
# {
# 	uniqueEmail=$(grep $email ../CustomerDetails | wc -l)
# 	if [[  $uniqueEmail -ne 0 ]]; then
# 		printf "\t\nEmail already used\n"
# 		readEmail
# 	else
# 		readName
# 	fi
# }



#This function asks user for phone number. The validPhoneNumber 
#function is then called to check is phone number is integars only
function readPhoneNumber
{
	printf "\n\tPlease enter the customer telephone Number: "
	read phoneNumber
	validNumber
}

#This function checks does phone number contain positive integars only.
#If not, the readPhoneNumber function to called again to ask user to re-enter
#phone number 
function validNumber
{
	if ! [[ $phoneNumber =~ ^[0-9]+$ ]]; then
		printf "\n\tInvalid (String) entry, only positive integers are allowed. Please re-renter option\n"
		readPhoneNumber
	fi
}

#Call readEmail function 
readEmail

#Asks user for name and take in as parameter - no error checking is done
printf "\n\tPlease enter the customer name: "
read name

#Asks user for alias and take in as parameter - no error checking is done
printf "\n\tPlease enter the customer alias: "
read alias

#Asks user for address and take in as parameter - no error checking is done
printf "\n\tPlease enter the customer address: "
read address

#Calls the readPhoneNumber function to ask user for number and take in as parameter 
readPhoneNumber

#Takes the entered parameters and list them in a file called CustomerDetails
echo "$email		$name		$alias		$address		$phoneNumber" >> ../CustomerDetails
printf "\n\tCustomer successfully added.\n"